buildscript {
    if (project == rootProject) {
        repositories {
            google()
            mavenCentral()
        }

        dependencies {
            classpath 'com.android.tools.build:gradle:8.3.2'
        }
    }
}

apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def isOwlBuild = project.hasProperty("isOwlBuild")

android {
    namespace 'com.formidable.reactnativeowl'
    compileSdkVersion safeExtGet('compileSdkVersion', 34)
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 21)
        targetSdkVersion safeExtGet('targetSdkVersion', 34)
        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        main {
            // If this build is triggered by react-native-owl, then include use AndroidManifest.owl.xml
            if (isOwlBuild) {
                manifest.srcFile 'src/main/AndroidManifest.owl.xml'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    lint {
        disable 'GradleCompatible'
    }
}

tasks.register('prepareReactNativeOwlModule', Copy) {
    from file(isOwlBuild ? 'templates/ReactNativeOwlModuleOwl.java' : 'templates/ReactNativeOwlModule.java')
    into 'src/main/java/com/formidable/reactnativeowl'
    rename { 'ReactNativeOwlModule.java' }
}

tasks.named('preBuild') {
    dependsOn tasks.named('prepareReactNativeOwlModule')
}

repositories {
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url("$rootDir/../node_modules/react-native/android")
    }
    google()
    mavenCentral()
}

dependencies {
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"  // From node_modules
}
